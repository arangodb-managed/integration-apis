// 
// DISCLAIMER
// 
// Copyright 2023 ArangoDB GmbH, Cologne, Germany
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Copyright holder is ArangoDB GmbH, Cologne, Germany
//

syntax = "proto3";

package arangodb.cloud.auth.v1;

option go_package = "github.com/arangodb-managed/apis/auth/v1";

import "common/v1/common.proto";
import "google/api/annotations.proto";

// AuthService is the API used to expose the authorize end point for JWT based authorization
service AuthService {
    // Get the current API version of this service.
    // Required permissions:
    // - None (authenticated only)
    rpc GetAPIVersion(common.v1.Empty) returns (common.v1.Version) {
        option (google.api.http) = {
            get: "/api/auth/v1/api-version"
        };
    }

    // Verify the current user based on JWT token provided in the request header
    // Verify if the resource URI in request is allowed for a given user
    // If the permission is allowed,
    // Set cookie (arango_graph_[env]]) in response for resource URL
    // Redirect user to callback_url in the request
    // Required permissions:
    // - None (since the subject is always the authenticated user).
    rpc Authorize(AuthorizeRequest) returns (common.v1.Empty) {
        option (google.api.http) = {
            post: "/api/auth/v1/authorize"
        };
    }

    // Logout the user from auth dashboard by deleting the cookie
    // - None (since the subject is always the authenticated user).
    rpc Logout(common.v1.Empty) returns (common.v1.Empty) {
        option (google.api.http) = {
            get: "/api/auth/v1/logout"
        };
    }
}

// Request arguments for Authorize
message AuthorizeRequest {
    // Resource identifier, example (notebook id)
    string resource_id = 1;
    // Resource Type is the kind of resource
    string resource_type = 2;
    // Endpoint of a resource
    string callback_url = 3;
}