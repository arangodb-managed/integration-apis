// 
// DISCLAIMER
// 
// Copyright 2020 ArangoDB GmbH, Cologne, Germany
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Copyright holder is ArangoDB GmbH, Cologne, Germany
// 
// Author Ewout Prangsma
// 

syntax = "proto3";

package arangodb.cloud.monitoring.v1;

option go_package = "github.com/arangodb-managed/apis/monitoring/v1";

import "common/v1/common.proto";

import "github.com/golang/protobuf/ptypes/timestamp/timestamp.proto";
import "google/api/annotations.proto";

// MonitoringService is the API used to monitor deployments.
service MonitoringService {
    // Get the current API version of this service.
    // Required permissions:
    // - None
    rpc GetAPIVersion(common.v1.Empty) returns (common.v1.Version) {
        option (google.api.http) = {
            get: "/api/monitoring/v1/api-version"
        };
    }

    // Fetch all logs of the deployment that matches the given request.
    // Required permissions:
    // - monitoring.logs.get on the deployment identified by the given deployment ID.
    rpc GetDeploymentLogs(GetDeploymentLogsRequest) returns (stream DeploymentLogsChunk) {
        option (google.api.http) = {
            post: "/api/monitoring/v1/streaming/deployment-logs"
            body: "*"
        };
    }
}

// GetDeploymentLogsRequest contains request arguments for GetDeploymentLogs.
message GetDeploymentLogsRequest {
    // Identifier of the deployment to get the logs from.
    string deployment_id = 1;
    // If set, limit logs to servers of this role.
    string role = 2;
    // Formatting for log messages.
    // The possible values are text and json, with default value being text.
    string format = 3;
    // If set limits logs to the server with this ID.
    string server_id = 4;

	// The start time for the query. Defaults to one hour ago.
    google.protobuf.Timestamp start_at = 100;
	// The end time for the query. Defaults to now.
    google.protobuf.Timestamp end_at = 101;
    // Limit the number of log lines. Defaults to 1000.
    int32 limit = 102;
}

message DeploymentLogsChunk {
    // Chunk of bytes from the logs
    bytes chunk = 1;
}
