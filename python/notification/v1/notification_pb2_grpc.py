# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.v1 import common_pb2 as common_dot_v1_dot_common__pb2
from notification.v1 import notification_pb2 as notification_dot_v1_dot_notification__pb2


class NotificationServiceStub(object):
    """NotificationService is the API used to interact with deployment notifications.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAPIVersion = channel.unary_unary(
                '/arangodb.cloud.notification.v1.NotificationService/GetAPIVersion',
                request_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Version.FromString,
                )
        self.ListDeploymentNotifications = channel.unary_unary(
                '/arangodb.cloud.notification.v1.NotificationService/ListDeploymentNotifications',
                request_serializer=notification_dot_v1_dot_notification__pb2.ListDeploymentNotificationsRequest.SerializeToString,
                response_deserializer=notification_dot_v1_dot_notification__pb2.NotificationList.FromString,
                )
        self.MarkNotificationAsRead = channel.unary_unary(
                '/arangodb.cloud.notification.v1.NotificationService/MarkNotificationAsRead',
                request_serializer=notification_dot_v1_dot_notification__pb2.MarkNotificationRequest.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.MarkNotificationAsUnread = channel.unary_unary(
                '/arangodb.cloud.notification.v1.NotificationService/MarkNotificationAsUnread',
                request_serializer=notification_dot_v1_dot_notification__pb2.MarkNotificationRequest.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )


class NotificationServiceServicer(object):
    """NotificationService is the API used to interact with deployment notifications.
    """

    def GetAPIVersion(self, request, context):
        """Get the current API version of this service.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeploymentNotifications(self, request, context):
        """Fetch all notifications related to given deployment.
        Required permissions:
        - notification.deployment-notification.list on the deployment identified by given deployment_id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkNotificationAsRead(self, request, context):
        """Mark notification related to given deployment as read.
        Required permissions:
        - notification.deployment-notification.mark-as-read on the deployment associated with the notification identified by notification_id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkNotificationAsUnread(self, request, context):
        """Mark notification related to given deployment as unread.
        Required permissions:
        - notification.deployment-notification.mark-as-unread on the deployment associated with the notification identified by notification_id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NotificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAPIVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAPIVersion,
                    request_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Version.SerializeToString,
            ),
            'ListDeploymentNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeploymentNotifications,
                    request_deserializer=notification_dot_v1_dot_notification__pb2.ListDeploymentNotificationsRequest.FromString,
                    response_serializer=notification_dot_v1_dot_notification__pb2.NotificationList.SerializeToString,
            ),
            'MarkNotificationAsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkNotificationAsRead,
                    request_deserializer=notification_dot_v1_dot_notification__pb2.MarkNotificationRequest.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'MarkNotificationAsUnread': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkNotificationAsUnread,
                    request_deserializer=notification_dot_v1_dot_notification__pb2.MarkNotificationRequest.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arangodb.cloud.notification.v1.NotificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NotificationService(object):
    """NotificationService is the API used to interact with deployment notifications.
    """

    @staticmethod
    def GetAPIVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.notification.v1.NotificationService/GetAPIVersion',
            common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            common_dot_v1_dot_common__pb2.Version.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDeploymentNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.notification.v1.NotificationService/ListDeploymentNotifications',
            notification_dot_v1_dot_notification__pb2.ListDeploymentNotificationsRequest.SerializeToString,
            notification_dot_v1_dot_notification__pb2.NotificationList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkNotificationAsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.notification.v1.NotificationService/MarkNotificationAsRead',
            notification_dot_v1_dot_notification__pb2.MarkNotificationRequest.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkNotificationAsUnread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.notification.v1.NotificationService/MarkNotificationAsUnread',
            notification_dot_v1_dot_notification__pb2.MarkNotificationRequest.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
