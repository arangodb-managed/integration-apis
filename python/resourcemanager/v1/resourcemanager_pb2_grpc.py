# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.v1 import common_pb2 as common_dot_v1_dot_common__pb2
from resourcemanager.v1 import resourcemanager_pb2 as resourcemanager_dot_v1_dot_resourcemanager__pb2


class ResourceManagerServiceStub(object):
    """ResourceManagerService is the API used to configure basic resource objects.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAPIVersion = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetAPIVersion',
                request_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Version.FromString,
                )
        self.ListOrganizations = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizations',
                request_serializer=common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationList.FromString,
                )
        self.GetOrganization = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetOrganization',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
                )
        self.CreateOrganization = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/CreateOrganization',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
                )
        self.UpdateOrganization = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/UpdateOrganization',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
                )
        self.DeleteOrganization = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteOrganization',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.ListOrganizationMembers = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizationMembers',
                request_serializer=common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.MemberList.FromString,
                )
        self.AddOrganizationMembers = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/AddOrganizationMembers',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.UpdateOrganizationMembers = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/UpdateOrganizationMembers',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.DeleteOrganizationMembers = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteOrganizationMembers',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.IsMemberOfOrganization = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/IsMemberOfOrganization',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.IsMemberOfOrganizationRequest.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.IsMemberOfOrganizationResponse.FromString,
                )
        self.ListOrganizationQuotas = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizationQuotas',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ListQuotasRequest.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaList.FromString,
                )
        self.ListProjects = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListProjects',
                request_serializer=common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ProjectList.FromString,
                )
        self.GetProject = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetProject',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
                )
        self.CreateProject = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/CreateProject',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
                )
        self.UpdateProject = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/UpdateProject',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
                )
        self.DeleteProject = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteProject',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.ListProjectQuotas = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListProjectQuotas',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ListQuotasRequest.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaList.FromString,
                )
        self.ListEvents = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListEvents',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ListEventOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.EventList.FromString,
                )
        self.ListOrganizationInvites = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizationInvites',
                request_serializer=common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInviteList.FromString,
                )
        self.ListMyOrganizationInvites = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListMyOrganizationInvites',
                request_serializer=common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInviteList.FromString,
                )
        self.GetOrganizationInvite = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetOrganizationInvite',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.FromString,
                )
        self.CreateOrganizationInvite = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/CreateOrganizationInvite',
                request_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.FromString,
                )
        self.DeleteOrganizationInvite = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteOrganizationInvite',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.AcceptOrganizationInvite = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/AcceptOrganizationInvite',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.RejectOrganizationInvite = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/RejectOrganizationInvite',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.ListQuotaDescriptions = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListQuotaDescriptions',
                request_serializer=common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaDescriptionList.FromString,
                )
        self.GetTermsAndConditions = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetTermsAndConditions',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.TermsAndConditions.FromString,
                )
        self.GetCurrentTermsAndConditions = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetCurrentTermsAndConditions',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.TermsAndConditions.FromString,
                )
        self.GetDataProcessingAddendum = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetDataProcessingAddendum',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.DataProcessingAddendum.FromString,
                )
        self.GetCurrentDataProcessingAddendum = channel.unary_unary(
                '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetCurrentDataProcessingAddendum',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.DataProcessingAddendum.FromString,
                )


class ResourceManagerServiceServicer(object):
    """ResourceManagerService is the API used to configure basic resource objects.
    """

    def GetAPIVersion(self, request, context):
        """Get the current API version of this service.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizations(self, request, context):
        """Fetch all organizations that the authenticated user is a member of.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganization(self, request, context):
        """Fetch an organization by its id.
        The authenticated user must be a member of the organization.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganization(self, request, context):
        """Create a new organization
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganization(self, request, context):
        """Update an organization
        Required permissions:
        - resourcemanager.organization.update on the organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganization(self, request, context):
        """Delete an organization
        Note that organization are never really removed.
        Instead their is_deleted field is set to true.
        Required permissions:
        - resourcemanager.organization.delete on the organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationMembers(self, request, context):
        """Get a list of members of the organization identified by the given context ID.
        Required permissions:
        - resourcemanager.organization.get on the organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddOrganizationMembers(self, request, context):
        """Add one or more members to an organization.
        If there are members (in the request arguments) that are already member of the
        organization an AlreadyExists error is returned.
        Required permissions:
        - resourcemanager.organization.update on the organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganizationMembers(self, request, context):
        """Update the ownership flag of one or more members of an organization.
        If there are members (in the request arguments) that are not yet member of
        the organization, an InvalidArgument error is returned.
        If the request would result in the last owner no longer being an owner,
        an InvalidArgument error is returned.
        Required permissions:
        - resourcemanager.organization.update on the organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationMembers(self, request, context):
        """Remove one or more members from an organization.
        If the request would result in the last owner being removed as member 
        of the organization, an InvalidArgument error is returned.
        Required permissions:
        - resourcemanager.organization.update on the organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsMemberOfOrganization(self, request, context):
        """Is the user identified by the given user ID a member
        of the organization identified by the given organization ID.
        Required permissions:
        - resourcemanager.organization.get on the organization, unless the requested user is identical to the authenticated user.
        Note that if the identified user or organization does not exist, no is returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationQuotas(self, request, context):
        """Get a list of quota values for the organization identified by the given context ID.
        If a quota is not specified on organization level, a (potentially tier specific) default
        value is returned.
        Required permissions:
        - resourcemanager.organization.get on the organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjects(self, request, context):
        """Fetch all projects in the organization identified by the given context ID.
        The authenticated user must be a member of the organization identifier by the given context ID.
        Required permissions:
        - resourcemanager.project.list on the organization identified by the given context ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProject(self, request, context):
        """Fetch a project by its id.
        The authenticated user must be a member of the organization that owns the project.
        Required permissions:
        - resourcemanager.project.get on the project identified by the given ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProject(self, request, context):
        """Create a new project
        The authenticated user must be a member of the organization that owns the project.
        Required permissions:
        - resourcemanager.project.create on the organization that owns the project
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProject(self, request, context):
        """Update a project
        The authenticated user must be a member of the organization that owns the project.
        Required permissions:
        - resourcemanager.project.update on the project
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProject(self, request, context):
        """Delete a project
        Note that project are initially only marked for deleted.
        Once all their resources are removed the project itself is deleted
        and cannot be restored.
        The authenticated user must be a member of the organization that owns the project.
        Required permissions:
        - resourcemanager.project.delete on the project
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectQuotas(self, request, context):
        """Get a list of quota values for the project identified by the given context ID.
        If a quota is not specified on project level, a value from organization level
        is returned.
        Required permissions:
        - resourcemanager.project.get on the project
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEvents(self, request, context):
        """Fetch all events in the organization identified by the given context ID.
        The authenticated user must be a member of the organization identifier by the given context ID.
        Required permissions:
        - resourcemanager.event.list on the organization identified by the given context ID
        Note that this method uses a POST method because the list options contains a repeated field.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationInvites(self, request, context):
        """Fetch all organization invites in the organization identified by the given context ID.
        The authenticated user must be a member of the organization identifier by the given context ID.
        Required permissions:
        - resourcemanager.organization-invite.list on the invite.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMyOrganizationInvites(self, request, context):
        """Fetch all organization invites for the email address of the authenticated user.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationInvite(self, request, context):
        """Fetch an organization invite by its id.
        The authenticated user must be a member of the organization that the invite is for.
        Required permissions:
        - resourcemanager.organization-invite.get on the invite.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganizationInvite(self, request, context):
        """Create a new organization invite.
        The authenticated user must be a member of the organization that the invite is for.
        Required permissions:
        - resourcemanager.organization-invite.create on the organization that the invite is for.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganizationInvite(self, request, context):
        """Delete an organization invite
        The authenticated user must be a member of the organization that the invite is for.
        Required permissions:
        - resourcemanager.organization-invite.delete on the invite
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptOrganizationInvite(self, request, context):
        """Accept an organization invite
        The authenticated user's email address must match the email address specified in
        the invite.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RejectOrganizationInvite(self, request, context):
        """Reject an organization invite
        The authenticated user's email address must match the email address specified in
        the invite.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListQuotaDescriptions(self, request, context):
        """Fetch descriptions for all quota kinds know by the platform.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTermsAndConditions(self, request, context):
        """Fetch a specific version of the Terms & Conditions.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentTermsAndConditions(self, request, context):
        """Fetch the current version of the Terms & Conditions for the organization
        identified by the given (optional) ID.
        Required permissions:
        - None If ID is empty.
        - resourcemanager.organization.get If ID is not empty.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataProcessingAddendum(self, request, context):
        """Fetch a specific version of the Data Processing Addendum.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentDataProcessingAddendum(self, request, context):
        """Fetch the current version of the Data Processing Addendum for the organization
        identified by the given (optional) ID.
        Required permissions:
        - None If ID is empty.
        - resourcemanager.organization.get If ID is not empty.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAPIVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAPIVersion,
                    request_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Version.SerializeToString,
            ),
            'ListOrganizations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizations,
                    request_deserializer=common_dot_v1_dot_common__pb2.ListOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationList.SerializeToString,
            ),
            'GetOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganization,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.SerializeToString,
            ),
            'CreateOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganization,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.SerializeToString,
            ),
            'UpdateOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganization,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.SerializeToString,
            ),
            'DeleteOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganization,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'ListOrganizationMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationMembers,
                    request_deserializer=common_dot_v1_dot_common__pb2.ListOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.MemberList.SerializeToString,
            ),
            'AddOrganizationMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOrganizationMembers,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'UpdateOrganizationMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganizationMembers,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'DeleteOrganizationMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationMembers,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'IsMemberOfOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.IsMemberOfOrganization,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.IsMemberOfOrganizationRequest.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.IsMemberOfOrganizationResponse.SerializeToString,
            ),
            'ListOrganizationQuotas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationQuotas,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ListQuotasRequest.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaList.SerializeToString,
            ),
            'ListProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjects,
                    request_deserializer=common_dot_v1_dot_common__pb2.ListOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ProjectList.SerializeToString,
            ),
            'GetProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProject,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.SerializeToString,
            ),
            'CreateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProject,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.SerializeToString,
            ),
            'UpdateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProject,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.SerializeToString,
            ),
            'DeleteProject': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProject,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'ListProjectQuotas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjectQuotas,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ListQuotasRequest.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaList.SerializeToString,
            ),
            'ListEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEvents,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.ListEventOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.EventList.SerializeToString,
            ),
            'ListOrganizationInvites': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizationInvites,
                    request_deserializer=common_dot_v1_dot_common__pb2.ListOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInviteList.SerializeToString,
            ),
            'ListMyOrganizationInvites': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMyOrganizationInvites,
                    request_deserializer=common_dot_v1_dot_common__pb2.ListOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInviteList.SerializeToString,
            ),
            'GetOrganizationInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationInvite,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.SerializeToString,
            ),
            'CreateOrganizationInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganizationInvite,
                    request_deserializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.SerializeToString,
            ),
            'DeleteOrganizationInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganizationInvite,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'AcceptOrganizationInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptOrganizationInvite,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'RejectOrganizationInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.RejectOrganizationInvite,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'ListQuotaDescriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListQuotaDescriptions,
                    request_deserializer=common_dot_v1_dot_common__pb2.ListOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaDescriptionList.SerializeToString,
            ),
            'GetTermsAndConditions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTermsAndConditions,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.TermsAndConditions.SerializeToString,
            ),
            'GetCurrentTermsAndConditions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentTermsAndConditions,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.TermsAndConditions.SerializeToString,
            ),
            'GetDataProcessingAddendum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataProcessingAddendum,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.DataProcessingAddendum.SerializeToString,
            ),
            'GetCurrentDataProcessingAddendum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentDataProcessingAddendum,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=resourcemanager_dot_v1_dot_resourcemanager__pb2.DataProcessingAddendum.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arangodb.cloud.resourcemanager.v1.ResourceManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ResourceManagerService(object):
    """ResourceManagerService is the API used to configure basic resource objects.
    """

    @staticmethod
    def GetAPIVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetAPIVersion',
            common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            common_dot_v1_dot_common__pb2.Version.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizations',
            common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetOrganization',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/CreateOrganization',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/UpdateOrganization',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Organization.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteOrganization',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizationMembers',
            common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.MemberList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddOrganizationMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/AddOrganizationMembers',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrganizationMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/UpdateOrganizationMembers',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteOrganizationMembers',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationMembersRequest.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsMemberOfOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/IsMemberOfOrganization',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.IsMemberOfOrganizationRequest.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.IsMemberOfOrganizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationQuotas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizationQuotas',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.ListQuotasRequest.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListProjects',
            common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.ProjectList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetProject',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/CreateProject',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/UpdateProject',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.Project.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteProject',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProjectQuotas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListProjectQuotas',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.ListQuotasRequest.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListEvents',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.ListEventOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.EventList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationInvites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListOrganizationInvites',
            common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInviteList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMyOrganizationInvites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListMyOrganizationInvites',
            common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInviteList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetOrganizationInvite',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganizationInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/CreateOrganizationInvite',
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.OrganizationInvite.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganizationInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/DeleteOrganizationInvite',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptOrganizationInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/AcceptOrganizationInvite',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RejectOrganizationInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/RejectOrganizationInvite',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListQuotaDescriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/ListQuotaDescriptions',
            common_dot_v1_dot_common__pb2.ListOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.QuotaDescriptionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTermsAndConditions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetTermsAndConditions',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.TermsAndConditions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentTermsAndConditions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetCurrentTermsAndConditions',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.TermsAndConditions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataProcessingAddendum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetDataProcessingAddendum',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.DataProcessingAddendum.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentDataProcessingAddendum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.resourcemanager.v1.ResourceManagerService/GetCurrentDataProcessingAddendum',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            resourcemanager_dot_v1_dot_resourcemanager__pb2.DataProcessingAddendum.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
