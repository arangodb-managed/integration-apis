# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.v1 import common_pb2 as common_dot_v1_dot_common__pb2
from network.v1 import network_pb2 as network_dot_v1_dot_network__pb2


class NetworkServiceStub(object):
    """NetworkService is the API used to manage the network for a deployment.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAPIVersion = channel.unary_unary(
                '/arangodb.cloud.network.v1.NetworkService/GetAPIVersion',
                request_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Version.FromString,
                )
        self.IsPrivateEndpointServiceFeatureAvailable = channel.unary_unary(
                '/arangodb.cloud.network.v1.NetworkService/IsPrivateEndpointServiceFeatureAvailable',
                request_serializer=network_dot_v1_dot_network__pb2.IsPrivateEndpointServiceFeatureAvailableRequest.SerializeToString,
                response_deserializer=network_dot_v1_dot_network__pb2.IsPrivateEndpointServiceFeatureAvailableResult.FromString,
                )
        self.GetPrivateEndpointService = channel.unary_unary(
                '/arangodb.cloud.network.v1.NetworkService/GetPrivateEndpointService',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
                )
        self.GetPrivateEndpointServiceByDeploymentID = channel.unary_unary(
                '/arangodb.cloud.network.v1.NetworkService/GetPrivateEndpointServiceByDeploymentID',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
                )
        self.CreatePrivateEndpointService = channel.unary_unary(
                '/arangodb.cloud.network.v1.NetworkService/CreatePrivateEndpointService',
                request_serializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.SerializeToString,
                response_deserializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
                )
        self.UpdatePrivateEndpointService = channel.unary_unary(
                '/arangodb.cloud.network.v1.NetworkService/UpdatePrivateEndpointService',
                request_serializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )


class NetworkServiceServicer(object):
    """NetworkService is the API used to manage the network for a deployment.
    """

    def GetAPIVersion(self, request, context):
        """Get the current API version of this service.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsPrivateEndpointServiceFeatureAvailable(self, request, context):
        """Checks if the private endpoint service feature is enabled and available.
        Required permissions:
        - network.privateendpointservice.get-feature on the deployment that is identified by the given deployment ID (if specified).
        - network.privateendpointservice.get-feature on the organization that is identified by the given organization ID (if specified).
        - None, authenticated only (if only the region ID is specified).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrivateEndpointService(self, request, context):
        """Fetch a private endpoint service by its ID.
        Required permissions:
        - network.privateendpointservice.get on the private endpoint service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrivateEndpointServiceByDeploymentID(self, request, context):
        """Fetch a private endpoint service by the deployment ID.
        Required permissions:
        - network.privateendpointservice.get-by-deployment-id on the deployment that owns the private endpoint service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePrivateEndpointService(self, request, context):
        """Create a new private endpoint service.
        Required permissions:
        - network.privateendpointservice.create on the deployment that owns the private endpoint service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePrivateEndpointService(self, request, context):
        """Update the private endpoint service.
        Required permissions:
        - network.privateendpointservice.update on the private endpoint service. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetworkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAPIVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAPIVersion,
                    request_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Version.SerializeToString,
            ),
            'IsPrivateEndpointServiceFeatureAvailable': grpc.unary_unary_rpc_method_handler(
                    servicer.IsPrivateEndpointServiceFeatureAvailable,
                    request_deserializer=network_dot_v1_dot_network__pb2.IsPrivateEndpointServiceFeatureAvailableRequest.FromString,
                    response_serializer=network_dot_v1_dot_network__pb2.IsPrivateEndpointServiceFeatureAvailableResult.SerializeToString,
            ),
            'GetPrivateEndpointService': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrivateEndpointService,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.SerializeToString,
            ),
            'GetPrivateEndpointServiceByDeploymentID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrivateEndpointServiceByDeploymentID,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.SerializeToString,
            ),
            'CreatePrivateEndpointService': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePrivateEndpointService,
                    request_deserializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
                    response_serializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.SerializeToString,
            ),
            'UpdatePrivateEndpointService': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePrivateEndpointService,
                    request_deserializer=network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arangodb.cloud.network.v1.NetworkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NetworkService(object):
    """NetworkService is the API used to manage the network for a deployment.
    """

    @staticmethod
    def GetAPIVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.network.v1.NetworkService/GetAPIVersion',
            common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            common_dot_v1_dot_common__pb2.Version.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsPrivateEndpointServiceFeatureAvailable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.network.v1.NetworkService/IsPrivateEndpointServiceFeatureAvailable',
            network_dot_v1_dot_network__pb2.IsPrivateEndpointServiceFeatureAvailableRequest.SerializeToString,
            network_dot_v1_dot_network__pb2.IsPrivateEndpointServiceFeatureAvailableResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrivateEndpointService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.network.v1.NetworkService/GetPrivateEndpointService',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrivateEndpointServiceByDeploymentID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.network.v1.NetworkService/GetPrivateEndpointServiceByDeploymentID',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePrivateEndpointService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.network.v1.NetworkService/CreatePrivateEndpointService',
            network_dot_v1_dot_network__pb2.PrivateEndpointService.SerializeToString,
            network_dot_v1_dot_network__pb2.PrivateEndpointService.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePrivateEndpointService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.network.v1.NetworkService/UpdatePrivateEndpointService',
            network_dot_v1_dot_network__pb2.PrivateEndpointService.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
