# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.v1 import common_pb2 as common_dot_v1_dot_common__pb2
from platform.v1 import platform_pb2 as platform_dot_v1_dot_platform__pb2


class PlatformServiceStub(object):
    """PlatformService is the API used to query for cloud provider & regional info.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAPIVersion = channel.unary_unary(
                '/arangodb.cloud.platform.v1.PlatformService/GetAPIVersion',
                request_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Version.FromString,
                )
        self.ListProviders = channel.unary_unary(
                '/arangodb.cloud.platform.v1.PlatformService/ListProviders',
                request_serializer=platform_dot_v1_dot_platform__pb2.ListProvidersRequest.SerializeToString,
                response_deserializer=platform_dot_v1_dot_platform__pb2.ProviderList.FromString,
                )
        self.GetProvider = channel.unary_unary(
                '/arangodb.cloud.platform.v1.PlatformService/GetProvider',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=platform_dot_v1_dot_platform__pb2.Provider.FromString,
                )
        self.ListRegions = channel.unary_unary(
                '/arangodb.cloud.platform.v1.PlatformService/ListRegions',
                request_serializer=platform_dot_v1_dot_platform__pb2.ListRegionsRequest.SerializeToString,
                response_deserializer=platform_dot_v1_dot_platform__pb2.RegionList.FromString,
                )
        self.GetRegion = channel.unary_unary(
                '/arangodb.cloud.platform.v1.PlatformService/GetRegion',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=platform_dot_v1_dot_platform__pb2.Region.FromString,
                )


class PlatformServiceServicer(object):
    """PlatformService is the API used to query for cloud provider & regional info.
    """

    def GetAPIVersion(self, request, context):
        """Get the current API version of this service.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProviders(self, request, context):
        """Fetch all providers that are supported by the ArangoDB cloud.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProvider(self, request, context):
        """Fetch a provider by its id.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRegions(self, request, context):
        """Fetch all regions provided by the provided identified by the given context ID.
        If the given context identifier contains a valid organization ID,
        the result includes all regions for that organization.
        Otherwise only regions are returned that are available to all organizations.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRegion(self, request, context):
        """Fetch a region by its id.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlatformServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAPIVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAPIVersion,
                    request_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Version.SerializeToString,
            ),
            'ListProviders': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProviders,
                    request_deserializer=platform_dot_v1_dot_platform__pb2.ListProvidersRequest.FromString,
                    response_serializer=platform_dot_v1_dot_platform__pb2.ProviderList.SerializeToString,
            ),
            'GetProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProvider,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=platform_dot_v1_dot_platform__pb2.Provider.SerializeToString,
            ),
            'ListRegions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRegions,
                    request_deserializer=platform_dot_v1_dot_platform__pb2.ListRegionsRequest.FromString,
                    response_serializer=platform_dot_v1_dot_platform__pb2.RegionList.SerializeToString,
            ),
            'GetRegion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRegion,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=platform_dot_v1_dot_platform__pb2.Region.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arangodb.cloud.platform.v1.PlatformService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PlatformService(object):
    """PlatformService is the API used to query for cloud provider & regional info.
    """

    @staticmethod
    def GetAPIVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.platform.v1.PlatformService/GetAPIVersion',
            common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            common_dot_v1_dot_common__pb2.Version.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProviders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.platform.v1.PlatformService/ListProviders',
            platform_dot_v1_dot_platform__pb2.ListProvidersRequest.SerializeToString,
            platform_dot_v1_dot_platform__pb2.ProviderList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.platform.v1.PlatformService/GetProvider',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            platform_dot_v1_dot_platform__pb2.Provider.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRegions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.platform.v1.PlatformService/ListRegions',
            platform_dot_v1_dot_platform__pb2.ListRegionsRequest.SerializeToString,
            platform_dot_v1_dot_platform__pb2.RegionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRegion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.platform.v1.PlatformService/GetRegion',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            platform_dot_v1_dot_platform__pb2.Region.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
