# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from billing.v1 import billing_pb2 as billing_dot_v1_dot_billing__pb2
from common.v1 import common_pb2 as common_dot_v1_dot_common__pb2


class BillingServiceStub(object):
    """BillingService is the API used to fetch billing information.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAPIVersion = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetAPIVersion',
                request_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Version.FromString,
                )
        self.GetOrganizationBillingFlags = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetOrganizationBillingFlags',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.OrganizationBillingFlags.FromString,
                )
        self.ListInvoices = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/ListInvoices',
                request_serializer=billing_dot_v1_dot_billing__pb2.ListInvoicesRequest.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.InvoiceList.FromString,
                )
        self.GetInvoice = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetInvoice',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.Invoice.FromString,
                )
        self.GetPreliminaryInvoice = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetPreliminaryInvoice',
                request_serializer=billing_dot_v1_dot_billing__pb2.GetPreliminaryInvoiceRequest.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.Invoice.FromString,
                )
        self.GetInvoicePDF = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetInvoicePDF',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PDFDocument.FromString,
                )
        self.ListPaymentProviders = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/ListPaymentProviders',
                request_serializer=billing_dot_v1_dot_billing__pb2.ListPaymentProvidersRequest.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PaymentProviderList.FromString,
                )
        self.GetPaymentProvider = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetPaymentProvider',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PaymentProvider.FromString,
                )
        self.ListPaymentMethods = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/ListPaymentMethods',
                request_serializer=billing_dot_v1_dot_billing__pb2.ListPaymentMethodsRequest.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PaymentMethodList.FromString,
                )
        self.GetPaymentMethod = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetPaymentMethod',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
                )
        self.PreparePaymentMethod = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/PreparePaymentMethod',
                request_serializer=billing_dot_v1_dot_billing__pb2.PreparePaymentMethodRequest.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PreparedPaymentMethod.FromString,
                )
        self.CreatePaymentMethod = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/CreatePaymentMethod',
                request_serializer=billing_dot_v1_dot_billing__pb2.CreatePaymentMethodRequest.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
                )
        self.UpdatePaymentMethod = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/UpdatePaymentMethod',
                request_serializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
                )
        self.DeletePaymentMethod = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/DeletePaymentMethod',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.GetDefaultPaymentMethod = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetDefaultPaymentMethod',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
                )
        self.SetDefaultPaymentMethod = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/SetDefaultPaymentMethod',
                request_serializer=billing_dot_v1_dot_billing__pb2.SetDefaultPaymentMethodRequest.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.GetBillingConfig = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetBillingConfig',
                request_serializer=common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.BillingConfig.FromString,
                )
        self.SetBillingConfig = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/SetBillingConfig',
                request_serializer=billing_dot_v1_dot_billing__pb2.SetBillingConfigRequest.SerializeToString,
                response_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                )
        self.GetAvailableCredits = channel.unary_unary(
                '/arangodb.cloud.billing.v1.BillingService/GetAvailableCredits',
                request_serializer=billing_dot_v1_dot_billing__pb2.GetAvailableCreditsRequest.SerializeToString,
                response_deserializer=billing_dot_v1_dot_billing__pb2.AvailableCredits.FromString,
                )


class BillingServiceServicer(object):
    """BillingService is the API used to fetch billing information.
    """

    def GetAPIVersion(self, request, context):
        """Get the current API version of this service.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganizationBillingFlags(self, request, context):
        """Fetch the billing specific flags for the organization identified by the given ID.
        Required permissions:
        - billing.organization.get
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInvoices(self, request, context):
        """Fetch all Invoice resources for the organization identified by the given
        organization ID that match the given criteria.
        Required permissions:
        - billing.invoice.list on the organization identified by the given organization ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInvoice(self, request, context):
        """Fetch a specific Invoice identified by the given ID.
        Required permissions:
        - billing.invoice.get on the organization that owns the invoice
        with given ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPreliminaryInvoice(self, request, context):
        """Fetch a preliminary Invoice identified by the given organization ID.
        The preliminary invoice contains all costs from the last invoice (if any, otherwise the creation date of the organization) until last night (midnight UTC).
        Required permissions:
        - billing.invoice.get-preliminary on the organization identified by the given organization ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInvoicePDF(self, request, context):
        """Fetch a specific Invoice identified by the given ID as PDF document.
        Required permissions:
        - billing.invoice.get on the organization that owns the invoice
        with given ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPaymentProviders(self, request, context):
        """Fetch all payment providers that are usable for the organization identified
        by the given context ID.
        Required permissions:
        - billing.paymentprovider.list on the organization identified by the given context ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentProvider(self, request, context):
        """Fetch a specific payment provider identified by the given ID.
        Required permissions:
        - None
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPaymentMethods(self, request, context):
        """Fetch all payment methods that are configured for the organization identified
        by the given context ID.
        Required permissions:
        - billing.paymentmethod.list on the organization identified by the given context ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentMethod(self, request, context):
        """Fetch a specific payment method identified by the given ID.
        Required permissions:
        - billing.paymentmethod.get on the organization that owns the payment method
        which is identified by the given ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreparePaymentMethod(self, request, context):
        """Prepare the payment provider for creating a new payment method.
        Required permissions:
        - billing.paymentmethod.create on the organization that owns future payment method.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePaymentMethod(self, request, context):
        """Create a new payment method.
        Required permissions:
        - billing.paymentmethod.create on the organization that owns the given payment method.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePaymentMethod(self, request, context):
        """Update a specific payment method.
        Note that only name, description & valid period are updated.
        Required permissions:
        - billing.paymentmethod.update on the organization that owns the given payment method.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePaymentMethod(self, request, context):
        """Delete a specific payment method identified by the given ID.
        Required permissions:
        - billing.paymentmethod.delete on the organization that owns the given payment method
        which is identified by the given ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultPaymentMethod(self, request, context):
        """Fetch the default PaymentMethod for an organization identified by the given ID.
        Required permissions:
        - billing.paymentmethod.get-default on the organization that is identified by the given ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultPaymentMethod(self, request, context):
        """Update the default PaymentMethod for an organization identified by the
        given organization ID, to the payment method identified by the given payment method ID.
        Required permissions:
        - billing.paymentmethod.set-default on the organization identified by the given organization ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBillingConfig(self, request, context):
        """Fetch the billing configuration of an organization identified by the given ID.
        Required permissions:
        - billing.config.get on the organization that is identified by the given ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBillingConfig(self, request, context):
        """Update the billing configuration for an organization identified by the
        given organization ID.
        Required permissions:
        - billing.config.set on the organization identified by the given organization ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableCredits(self, request, context):
        """Get available credits for an organization identified by organization_id
        Required permissions:
        - billing.credits.get_available on the organization identified by the given organization ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BillingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAPIVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAPIVersion,
                    request_deserializer=common_dot_v1_dot_common__pb2.Empty.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Version.SerializeToString,
            ),
            'GetOrganizationBillingFlags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganizationBillingFlags,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.OrganizationBillingFlags.SerializeToString,
            ),
            'ListInvoices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInvoices,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.ListInvoicesRequest.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.InvoiceList.SerializeToString,
            ),
            'GetInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInvoice,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.Invoice.SerializeToString,
            ),
            'GetPreliminaryInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPreliminaryInvoice,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.GetPreliminaryInvoiceRequest.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.Invoice.SerializeToString,
            ),
            'GetInvoicePDF': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInvoicePDF,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PDFDocument.SerializeToString,
            ),
            'ListPaymentProviders': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPaymentProviders,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.ListPaymentProvidersRequest.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PaymentProviderList.SerializeToString,
            ),
            'GetPaymentProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentProvider,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PaymentProvider.SerializeToString,
            ),
            'ListPaymentMethods': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPaymentMethods,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.ListPaymentMethodsRequest.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PaymentMethodList.SerializeToString,
            ),
            'GetPaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentMethod,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.SerializeToString,
            ),
            'PreparePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.PreparePaymentMethod,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.PreparePaymentMethodRequest.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PreparedPaymentMethod.SerializeToString,
            ),
            'CreatePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePaymentMethod,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.CreatePaymentMethodRequest.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.SerializeToString,
            ),
            'UpdatePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePaymentMethod,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.SerializeToString,
            ),
            'DeletePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePaymentMethod,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetDefaultPaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultPaymentMethod,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.PaymentMethod.SerializeToString,
            ),
            'SetDefaultPaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultPaymentMethod,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.SetDefaultPaymentMethodRequest.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetBillingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBillingConfig,
                    request_deserializer=common_dot_v1_dot_common__pb2.IDOptions.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.BillingConfig.SerializeToString,
            ),
            'SetBillingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBillingConfig,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.SetBillingConfigRequest.FromString,
                    response_serializer=common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetAvailableCredits': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableCredits,
                    request_deserializer=billing_dot_v1_dot_billing__pb2.GetAvailableCreditsRequest.FromString,
                    response_serializer=billing_dot_v1_dot_billing__pb2.AvailableCredits.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arangodb.cloud.billing.v1.BillingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BillingService(object):
    """BillingService is the API used to fetch billing information.
    """

    @staticmethod
    def GetAPIVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetAPIVersion',
            common_dot_v1_dot_common__pb2.Empty.SerializeToString,
            common_dot_v1_dot_common__pb2.Version.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganizationBillingFlags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetOrganizationBillingFlags',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            billing_dot_v1_dot_billing__pb2.OrganizationBillingFlags.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListInvoices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/ListInvoices',
            billing_dot_v1_dot_billing__pb2.ListInvoicesRequest.SerializeToString,
            billing_dot_v1_dot_billing__pb2.InvoiceList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetInvoice',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            billing_dot_v1_dot_billing__pb2.Invoice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPreliminaryInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetPreliminaryInvoice',
            billing_dot_v1_dot_billing__pb2.GetPreliminaryInvoiceRequest.SerializeToString,
            billing_dot_v1_dot_billing__pb2.Invoice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInvoicePDF(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetInvoicePDF',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PDFDocument.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPaymentProviders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/ListPaymentProviders',
            billing_dot_v1_dot_billing__pb2.ListPaymentProvidersRequest.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PaymentProviderList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetPaymentProvider',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PaymentProvider.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPaymentMethods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/ListPaymentMethods',
            billing_dot_v1_dot_billing__pb2.ListPaymentMethodsRequest.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PaymentMethodList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetPaymentMethod',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreparePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/PreparePaymentMethod',
            billing_dot_v1_dot_billing__pb2.PreparePaymentMethodRequest.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PreparedPaymentMethod.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/CreatePaymentMethod',
            billing_dot_v1_dot_billing__pb2.CreatePaymentMethodRequest.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/UpdatePaymentMethod',
            billing_dot_v1_dot_billing__pb2.PaymentMethod.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/DeletePaymentMethod',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultPaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetDefaultPaymentMethod',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            billing_dot_v1_dot_billing__pb2.PaymentMethod.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefaultPaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/SetDefaultPaymentMethod',
            billing_dot_v1_dot_billing__pb2.SetDefaultPaymentMethodRequest.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBillingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetBillingConfig',
            common_dot_v1_dot_common__pb2.IDOptions.SerializeToString,
            billing_dot_v1_dot_billing__pb2.BillingConfig.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetBillingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/SetBillingConfig',
            billing_dot_v1_dot_billing__pb2.SetBillingConfigRequest.SerializeToString,
            common_dot_v1_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAvailableCredits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arangodb.cloud.billing.v1.BillingService/GetAvailableCredits',
            billing_dot_v1_dot_billing__pb2.GetAvailableCreditsRequest.SerializeToString,
            billing_dot_v1_dot_billing__pb2.AvailableCredits.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
