//
// This file is AUTO-GENERATED by protoc-gen-ts.
// Do not modify it manually.
///
import api from '../../api'
import * as googleTypes from '../../googleTypes'
import { Empty as arangodb_cloud_common_v1_Empty } from '../../common/v1/common'
import { IDOptions as arangodb_cloud_common_v1_IDOptions } from '../../common/v1/common'
import { Version as arangodb_cloud_common_v1_Version } from '../../common/v1/common'

// File: ml/v1/ml.proto
// Package: arangodb.cloud.ml.v1

// MLServices is a single resource which represents the state and configuration
// of ML Services (ArangoGraphML) for a deployment specified by deployment_id.
export interface MLServices {
  // Identifier of the deployment for this MLServices resource.
  // This is a ready-only value.
  // string
  deployment_id?: string;
  
  // Set to true if ML services are enabled for this deployment.
  // boolean
  enabled?: boolean;
}

// MLService is the API used to configure ArangoML on ArangoGraph Insights Platform.
export interface IMLService {
  // Get the current API version of this service.
  // Required permissions:
  // - None
  GetAPIVersion: (req?: arangodb_cloud_common_v1_Empty) => Promise<arangodb_cloud_common_v1_Version>;
  
  // Get an existing MLServices resource for a given deployment (specified by the id).
  // Required permissions:
  // - ml.mlservices.get
  GetMLServices: (req: arangodb_cloud_common_v1_IDOptions) => Promise<MLServices>;
  
  // Update an existing MLServices resource. If it does not exist, this will create a new one.
  // Pass the desired updated state of MLServices to this call.
  // Required permissions:
  // - ml.mlservices.update
  UpdateMLServices: (req: MLServices) => Promise<MLServices>;
}

// MLService is the API used to configure ArangoML on ArangoGraph Insights Platform.
export class MLService implements IMLService {
  // Get the current API version of this service.
  // Required permissions:
  // - None
  async GetAPIVersion(req?: arangodb_cloud_common_v1_Empty): Promise<arangodb_cloud_common_v1_Version> {
    const path = `/api/ml/v1/api-version`;
    const url = path + api.queryString(req, []);
    return api.get(url, undefined);
  }
  
  // Get an existing MLServices resource for a given deployment (specified by the id).
  // Required permissions:
  // - ml.mlservices.get
  async GetMLServices(req: arangodb_cloud_common_v1_IDOptions): Promise<MLServices> {
    const path = `/api/ml/v1/mlservices/${encodeURIComponent(req.id || '')}`;
    const url = path + api.queryString(req, [`id`]);
    return api.get(url, undefined);
  }
  
  // Update an existing MLServices resource. If it does not exist, this will create a new one.
  // Pass the desired updated state of MLServices to this call.
  // Required permissions:
  // - ml.mlservices.update
  async UpdateMLServices(req: MLServices): Promise<MLServices> {
    const url = `/api/ml/v1/mlservices/${encodeURIComponent(req.deployment_id || '')}`;
    return api.put(url, req);
  }
}
